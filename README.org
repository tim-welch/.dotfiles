* Configuring Linux
  Both my tooling and my dotfiles are managed in this git repository.

** Tools
*** Nix Home Manager
   All tools I depend on for my normal workflow are installed and managed using Nix Home Manager. This allows me to have the same tools at the same version regardless of my base operating system.

   This includes the tools required to install my dotfiles.

   Run =./bootstrap.nix= and =./bootstrap.nix-home-manager= to install the tools.

*** Alternative
    If you don't want to use Nix Home Manager, then applications will need to be installed individually.

**** Ubuntu
    =apt install cargo=
    =cargo install bat exa=
**** Rocky Linux
    =sudo dnf install cargo neovim fzf stow xsel bat coreutils curl exa fzf gawk keychain ripgrep tree unzip vim wget git xclip fd-find editorconfig editorconfig-libs editorconfig-devel python3-pyflakes=
***** For neovim
  *neovim 0.5+ is required*
  - Fix clipboard
    =apt install xsel=
  - Python support
    =pip install pynvim=
  - Node support
    =npm i -g neovim

** dotfiles
   I use =stow= to manage my dotfiles. This allows me to organize the configurations by application and link to them from my home directory.

   To see what =stow= will do, run, for example, =stow --verbose=2 -nSt ~ base nix-home-manager=. This will run =stow= on both =base= and =nix-home-manager= replicating the directory structure in =~= (the home directory). But instead of actually creating the links, the =-n= option tells =stow= to show what would happen including any errors.

   To install the dotfiles, run:

#+begin_src sh
stow -St ~ base nix-home-manager bash git nvim tmux
#+end_src


